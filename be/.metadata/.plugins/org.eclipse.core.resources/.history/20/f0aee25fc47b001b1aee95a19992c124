package com.example.demo.cmm.controller;

import static com.example.demo.cmm.utl.Proxy.string;

import java.util.HashMap;
import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.cmm.utl.Messenger;
import com.example.demo.cmm.utl.Pagination;
import com.example.demo.exh.domain.Exhbn;
import com.example.demo.exh.repository.ExhbnRepository;
import com.example.demo.exh.service.ExhbnService;

import lombok.RequiredArgsConstructor;


@RestController @RequiredArgsConstructor
public class AbstractController<T> {
	private final Logger logger = LoggerFactory.getLogger(this.getClass());

    @PostMapping("")
    public T save(@RequestBody T t) {
    	return abstractService.save(t);
    }

}

/*
public abstract T save(T t);
public abstract void delete(T t);
public abstract int count();
public abstract List<T> findAll();
public abstract T getOne(int id);
public abstract Optional<T> findById(int id);
public abstract boolean existsById(int id); */