package com.example.demo.cmm.controller;

import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;


import lombok.RequiredArgsConstructor;


@RestController @RequiredArgsConstructor
public abstract class AbstractController<T> {
	public abstract ResponseEntity<Integer> save(T t);
	public abstract ResponseEntity<Integer> delete(T t);
	public abstract ResponseEntity<Integer> count();
	public abstract ResponseEntity<List<T>> findAll();
	public abstract ResponseEntity<T> getOne(int id);
	public abstract ResponseEntity<T> findById(int id);
	public abstract ResponseEntity<Boolean> existsById(int id);
	/*
	private final AbstractService<T> service;
	
	@PostMapping("")
	public T save(@RequestBody T t) {
		return service.save(t);
	}
	
	@DeleteMapping("")
	public void delete(@RequestBody T t) {
		service.delete(t);
	}
	
	@GetMapping("/count")
	public int count() {
		return service.count();
	}
	
	@GetMapping("")
	public List<T> findAll(){
		return service.findAll();
	}
	
	@GetMapping("/{id}")
	public T getOne(@PathVariable int id) {
		return service.getOne(id);
	}
	
	@GetMapping("/find/{id}")
	public Optional<T> findById(@PathVariable int id){
		return service.findById(id);
	}
	
	@GetMapping("/exists/{id}")
	public boolean existsById(@PathVariable int id) {
		return service.existsById(id);
	} */
}